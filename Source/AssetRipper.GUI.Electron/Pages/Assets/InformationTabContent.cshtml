@using AssetRipper.Assets;
@model AssetRipper.Assets.IUnityObjectBase

<table class="table">
	<tbody>
		<tr>
			<th>@Localization.Collection</th>
			<td><a asp-page="/Collections/View" asp-route-path="@Model.Collection.GetPath().ToJson()">@Model.Collection.Name</a></td>
		</tr>
		<tr>
			<th>@Localization.PathId</th>
			<td>@Model.PathID</td>
		</tr>
		<tr>
			<th>@Localization.ClassIdTypeNumber</th>
			<td>@Model.ClassID</td>
		</tr>
		<tr>
			<th>@Localization.ClassIdTypeName</th>
			<td>@Model.ClassName</td>
		</tr>
		@if (Model.OriginalDirectory is not null || Model.OriginalName is not null || Model.OriginalExtension is not null)
		{
			<tr>
				<th>@Localization.OriginalPath</th>
				<td>@Model.OriginalPath</td>
			</tr>
		}
		@if (!string.IsNullOrEmpty(Model.AssetBundleName))
		{
			<tr>
				<th>@Localization.AssetBundleName</th>
				<td>@Model.AssetBundleName</td>
			</tr>
		}
		@foreach ((string key, IUnityObjectBase value) in Model.GetCustomReferenceProperties())
		{
			<tr>
				<th>@key</th>
				<td><a asp-page="/Assets/View" asp-route-path="@value.GetPath().ToJson()">@value.GetBestName()</a></td>
			</tr>
		}
		@foreach ((string key, string value) in Model.GetCustomStringProperties())
		{
			<tr>
				<th>@key</th>
				<td>@value</td>
			</tr>
		}
	</tbody>
</table>